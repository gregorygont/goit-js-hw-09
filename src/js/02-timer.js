import flatpickr from 'flatpickr';
import 'flatpickr/dist/flatpickr.min.css';
import { Report } from 'notiflix/build/notiflix-report-aio';

document.body.style.backgroundColor = '#ece5da';
const TIMER_DELAY = 1000;
let intervalId = null;
let selectedDate = null;
let currentDate = null;

const calendar = document.querySelector('#datetime-picker'); // –û—Ç—Ä–∏–º—É—î–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏: calendar
const startBtn = document.querySelector('[data-start]');  // —ñ startBtn.
startBtn.disabled = true;

Report.info(
  'üëã Greeting, my Friend!',
  'Please, choose a date and click on start',
  'Okay'
);  // –í–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó Report.info() –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ notiflix

flatpickr(calendar, {
  enableTime: true,
  time_24hr: true,
  defaultDate: new Date(),
  minuteIncrement: 1,
  onClose(selectedDates) {
    if (selectedDates[0].getTime() < Date.now()) {
      Report.failure(
        'ü•∫ Ooops...',
        'Please, choose a date in the future and remember: "Knowledge rests not upon truth alone, but upon error also." - Carl Gustav Jung',
        'Okay'
      );
    } else {
      Report.success(
        'ü•∞ Congratulation! Click on start!',
        '"Do not try to become a person of success but try to become a person of value." <br/><br/>- Albert Einstein',
        'Okay'
      );
      startBtn.disabled = false;
      const setTimer = () => {
        selectedDate = selectedDates[0].getTime();
        timer.start();
      };

      startBtn.addEventListener('click', setTimer);
    }
  },
}); // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º –æ–±'—î–∫—Ç flatpickr –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Å—Ç–æ—Ä–æ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ flatpickr).
// –ü—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –∫–∞–ª–µ–Ω–¥–∞—Ä—è (—Ñ—É–Ω–∫—Ü—ñ—è onClose) –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –≤–∏–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞ –º–µ–Ω—à–∞ –∑–∞ –ø–æ—Ç–æ—á–Ω—É –¥–∞—Ç—É —ñ –≤–∏–≤–æ–¥–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 
// –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ–π Report.failure() –∞–±–æ Report.success(). –¢–∞–∫–æ–∂ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å disabled –¥–ª—è –∫–Ω–æ–ø–∫–∏ startBtn 
// –≤ –∑–Ω–∞—á–µ–Ω–Ω—è false (—É–≤—ñ–º–∫–Ω–µ–Ω–æ) —ñ —Å—Ç–≤–æ—Ä—é—î–º –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ startBtn, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î —Ñ—É–Ω–∫—Ü—ñ—é setTimer.

const timer = {
  rootSelector: document.querySelector('.timer'),
  start() {
    intervalId = setInterval(() => {
      startBtn.disabled = true;
      calendar.disabled = true;
      currentDate = Date.now();
      const delta = selectedDate - currentDate;

      if (delta <= 0) {
        this.stop();
        Report.info(
          'üëè Congratulation! Timer stopped!',
          'Please, if you want to start timer, choose a date and click on start or reload this page',
          'Okay'
        );
        return;
      }
      const { days, hours, minutes, seconds } = this.convertMs(delta);
      this.rootSelector.querySelector('[data-days]').textContent =
        this.addLeadingZero(days);
      this.rootSelector.querySelector('[data-hours]').textContent =
        this.addLeadingZero(hours);
      this.rootSelector.querySelector('[data-minutes]').textContent =
        this.addLeadingZero(minutes);
      this.rootSelector.querySelector('[data-seconds]').textContent =
        this.addLeadingZero(seconds);
    }, TIMER_DELAY);
  },
  
  stop() {
    clearInterval(intervalId);
    this.intervalId = null;
    startBtn.disabled = true;
    calendar.disabled = false;
  },

  convertMs(ms) {
    const second = 1000;
    const minute = second * 60;
    const hour = minute * 60;
    const day = hour * 24;

    const days = this.addLeadingZero(Math.floor(ms / day));
    const hours = this.addLeadingZero(Math.floor((ms % day) / hour));
    const minutes = this.addLeadingZero(
      Math.floor(((ms % day) % hour) / minute)
    );
    const seconds = this.addLeadingZero(
      Math.floor((((ms % day) % hour) % minute) / second)
    );

    return { days, hours, minutes, seconds };
  },
  // // –û–≥–æ–ª–æ—à—É—î–º –æ–±'—î–∫—Ç timer, —è–∫–∏–π –º–∞—î –º–µ—Ç–æ–¥–∏ start() —ñ stop() –¥–ª—è —Ä–æ–∑–ø–æ—á–∞—Ç—Ç—è —ñ –∑—É–ø–∏–Ω–∫–∏ —Ç–∞–π–º–µ—Ä–∞. 
  // –ú–µ—Ç–æ–¥ start() –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î —ñ–Ω—Ç–µ—Ä–≤–∞–ª, —è–∫–∏–π –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É (TIMER_DELAY) —ñ –æ–Ω–æ–≤–ª—é—î –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ. 
  // –ú–µ—Ç–æ–¥ stop() –∑—É–ø–∏–Ω—è—î —Ç–∞–π–º–µ—Ä —ñ –∑–Ω–æ–≤—É –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å disabled –¥–ª—è –∫–Ω–æ–ø–∫–∏ startBtn —ñ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. 
  // –¢–∞–∫–æ–∂ –≤ –æ–±'—î–∫—Ç—ñ timer —î –¥–µ–∫—ñ–ª—å–∫–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –º–µ—Ç–æ–¥—ñ–≤ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥ –≤ –¥–Ω—ñ, –≥–æ–¥–∏–Ω–∏, —Ö–≤–∏–ª–∏–Ω–∏ —ñ —Å–µ–∫—É–Ω–¥–∏, 
  // –∞ —Ç–∞–∫–æ–∂ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–µ–¥—É—á–æ–≥–æ –Ω—É–ª—è –¥–æ —á–∏—Å–µ–ª.


  addLeadingZero(value) {
    return String(value).padStart(2, 0);
  },
};